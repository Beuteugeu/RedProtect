# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build
on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 16
      uses: actions/setup-java@v3
      with:
        java-version: '16'
        distribution: 'temurin'
        cache: maven
    - name: Cache local Maven repository
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Build and analyze
      run: mvn clean install
    - name: Extract Maven project version
      run: echo ::set-output name=version::$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
      id: getversion
    - name: Rename jar file
      run: cp RedProtect-Sponge-7/target/RedProtect-**.jar RedProtect-Sponge-7/target/RedProtect-${{ steps.getversion.outputs.version }}-b${{ github.run_number }}.jar
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: v${{ steps.getversion.outputs.version }}-b${{ github.run_number }}
        prerelease: true
        title: "Development Build"
        files: |
          RedProtect-Sponge-7/target/RedProtect-${{ steps.getversion.outputs.version }}-b${{ github.run_number }}.jar